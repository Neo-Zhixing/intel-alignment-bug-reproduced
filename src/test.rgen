#version 460
#extension GL_EXT_ray_tracing : require

layout(set = 0, binding = 0) uniform accelerationStructureEXT accelerationStructure;
layout(set = 0, binding = 1) buffer outputBuffer {
    uint data[];
};
layout(location = 0) rayPayloadEXT uint _ray_payload_not_used;


layout(shaderRecordEXT) buffer Sbt {
    uint data[16];
} sbt;

void main() {
    for (uint i = 0; i < 16; i++) {
        data[i] = sbt.data[i];
        // We've written vaules 0..16 into sbt.data[i].
        // Copy this into the output buffer.
    }

    traceRayEXT(
        accelerationStructure,
        gl_RayFlagsOpaqueEXT, // RayFlags
        0xFF, // CullMask
        0, // SBT offset, ray type index
        1, // SBT stride, number of ray types // TODO: Make this a shader constant
        0, // missIndex
        vec3(0.5, 0.5, 0.5),     // ray origin
        0.001,           // ray min range
        vec3(-1.0, 0.0, 0.0), // direction
        10000.0, // tmax
        0 // payload
    );
}
